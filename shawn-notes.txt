=== Section 1: Command Line
========

mkdir [directory-name]
	make new folder with name [directory-name]

ls 
	displays a list of files and folders in the current folder 

cd [directory-name]
	go into [directory-name]

touch [file.extension]
	creates a new file with name [file.extension]

cat [filename]
	displays the contents of the file 

pwd 
	displays the current working directory

tab to auto-complete 
ctrl + L to clear the terminal in BASH

=== Section 2: GIT Basics
================

git init to initialise any project

git config --list to see current config

git add 
	move from working directory to staging area (tells git to start tracking a file)

git commit -m "MESSAGE" 
	commit changes from staging area to repository
	message is like a reason for creating a new version of the file cos GIT IS PARANOID

git status 
	status of working directory 
	(red txt file is still in the cardboard box (working directory), add will shift to the wooden box (staging area) which will change it to green)
	does 2 checks:
		- compares wooden box and cardboard box, whatever is not in the wooden box (staging area) will be shown in red
		- compares wooden box and metal box, whatever is not in the repository will be shown in GREEN

git diff
	shows the changes that have been made that have been yet to be committed in the WORKING DIRECTORY

git log
	shows the different versions of commits

git log --oneline
	shows a summary of the different versions of commits 

colon+ Q to quit text editor(VIMP)

=== Section 3: Time Travelling
==========

git log --all 
	shows complete history regardless of where the head is

git checkout [commit-id]
	switches workspace to the version at that commit-id

git log --all --oneline

git checkout master
	brings you to the most recent id
